{"path":"pdf/课件/L1 - Model of computation.pdf","text":"Introduction to Algorithm Design and Analysis [01] Model of Computation Jingwei Xu http://ics.nju.edu.cn/people/jingweixu Institute of Computer Software Nanjing University Jingwei Xu（徐经纬） • Research: Software Engineering for Artiﬁcial Intelligence • Deep learning Quality Assurance: Testing, Analysis, and Applications (e.g., Autonomous driving system) • DL Platform: Resource scheduling & Arrangement • Ofﬁce: 计算机系919 • Email: \tjingweix@nju.edu.cn • homepage: http://ics.nju.edu.cn/people/jingweixu \t\t\t Course Information • Syllabus • Textbook • Website Syllabus Model of Computation Algorithm Design & Analysis Techniques Computation Complexity Syllabus Model of Computation Asymptotics Recursion Tutorial 1 Sorting Tutorial 2 Selection Searching Tutorial 3 Solutions to Problems Mid-term Exam Syllabus Graph Traversal Tutorial 4 Graph Optimization: MST Graph Optimization: Shortest Path Tutorial 5 Dynamic Programming Tutorial 6 String Matching Tutorial 7 Solutions to Problems Final Exam NPC Syllabus Strategies Problems Algorithm Design & Analysis Syllabus Strategies Problems Syllabus Strategies Problems Syllabus Strategies Problems Optimization Traversal Syllabus Strategies Problems Optimization Traversal Order Graph Syllabus Strategies Problems Optimization Traversal Order Graph Divide & Conquer Brute Force DFS BFS Dynamic Programming Greedy Shortest Path MST Shortest Path Graph Traversal Sorting Selection Searching Sorting Selection Searching Textbooks • Course outline: LADA • Lectures on Algorithm Design & Analysis (slides) • Course contents • Algorithm Design and Analysis More info about this book: https://zhuanlan.zhihu.com/p/24150569 Textbooks • Further reading • Introduction to Algorithms (CLRS) • Algorithms • Algorithm Design • Computer Algorithms* https://walkccc.me/CLRS/ Course Websites • 算法QQ群 • 291673565 • Online Judge平台 • http://210.28.134.15/ Criteria of Assessment • 作业 30% • 纸质作业 15% • OJ平台 15% • 期中考试 20% • 期末考试 50% Algorithm Design & Analysis • Algorithm - the spirit of computing • Model of computation • Algorithm by example • Greatest common divisor • Sequential search Algorithm Design & Analysis • Algorithm design & analysis • Design: correctness • Analysis: worst-case / average-case cost Computer and Computing • Problem 1: why the computer seems to be able to do anything? • Scientiﬁc computing, document processing, computer vision, movies, computer games, … Computer and Computing • Problem 1: why the computer seems to be able to do anything? • Scientiﬁc computing, document processing, computer vision, movies, computer games, … Computer and Computing • Problem 2: what can / cannot be efﬁciently done by a computer? • Manage millions of songs v.s. music composition Computer and Computing • Problem 2: what can / cannot be efﬁciently done by a computer? • Manage millions of songs v.s. music composition Computer and Computing • Computing • Encoding everything into ‘0’s and ‘1’s • Operations over ‘1’s and ‘0’s • Decoding the ‘1’s and ‘0’s • Turing machine • An abstract/logical computer Computing in Everyday LifeComputing in Everyday LifeComputing in Everyday LifeComputing in Everyday LifeComputing in Everyday LifeComputing in Everyday Life Algorithm Rebuild the world With 0s and 1s Algorithm Rebuild the world With 0s and 1s Algorithm Rebuild the world With 0s and 1s Algorithm • Algorithm is the spirit of computing • To solve a speciﬁc problem (so-called an algorithmic problem) • Combination of basic operations • in a precise and elegant way Algorithm • Essential issues • Model of computation • Algorithm design • Algorithm analysis Model of Computation • Problems • Why the algorithms we learn can run almost everywhere? • Why the algorithms we learn can be implemented in any language? • Machine- and language- independent algorithms, running on an abstract machine • Turing machine: over-qualify • RAM model: simple but powerful RAM Model Program Location counter x 1 x 2 … x n y 1 y 2 Read-only input tape Write-only output tape …… r 0 r 1 r 2 r 3 Memory Accumulator The RAM Model of Computation • Each simple operation takes one time step • E.g., key comparison, +/-, memory access, … • Non-simple operations should be decomposed • Loop • Subroutine • Memory • Memory access is simple operation • Unlimited memory Tradeoﬀ: accuracy v.s. ease of use To Create an Algorithm • Algorithm design • Composition of simple operations, to solve an algorithmic problem • Algorithm analysis • Amount of work done / memory used • In the worst/average case • Advanced issues • Optimality, approximation ratio, … Algorithm by Example • Algorithmic Problem 1 • Find the greatest common divisor of two non- negative integers m and n • Algorithmic Problem 2 • Is a speciﬁc key K stored in array E[1..n]? Probably the Oldest Algorithm • Euclid Algorithm • Find the greatest common divisor of two non-negative integers m and n Speciﬁcation Input: non-negative integer m, n Output: gcd(m, n) Euclid algorithm [E1] n divides m, the remainder -> r [E2] if r=0 then return n [E3] n -> m; r -> n; goto E1 Euclid algorithm - recursive version Euclid(m, n) [E1] if r=0 then return m [E2] else return Euclid(n, m mod n) Sequential Search • Problem • Search an array for a speciﬁc key Speciﬁcation Input: K, E[1..n] Output: Location of K (1,2,…,n; -1: K is not in E[]) Sequential search int seqSearch(int[] E, int n, int K) int ans, index; ans = -1; for(index = 1; index <= n; index ++) if(K==E[index]) ans = index; break; return ans; Algorithm Design • Criteria • Deﬁning correctness • Main challenge • For proving correctness • Our strategy • Mathematical induction • … Speciﬁcation Input: non-negative integer m, n Output: gcd(m, n) Main challenge The output is always correct, for any legal input. Inﬁnite possible inputs Mathematical induction Weak principle Strong principle For Your Reference • Mathematical induction The Weak Principle of Mathematical Induction If the statement p(b) is true and the statement p(n-1) => p(n) is true for all n>b, then p(n) is true for all integers n>=b. The Strong Principle of Mathematical Induction If the statement p(b) is true, and the statement {p(b) and p(b+1) and … and p(n-1) => p(n)} is true, for all n>b, then p(n) is true for all integers n>=b. Correctness of the Euclid Algorithm • Induction on n • Base case • n = 0: for any m, Euclid(m, 0) = m; • n = 1: for any m, Euclid(m, 1) = 1; • n = 2: … • Assumption • For any n≤N 0 , Euclid(m, n) is correct; • Induction • Euclid(m, N 0 +1) = Euclid(N 0 +1, m mod (N 0 +1)); Notes on Induction “Notes on Structured Programming”, E.W. Dĳkstra I have mentioned mathematical induction explicitly, because it is the only pattern of reasoning that I am aware of, that eventually enables us to cope with loops and recursive procedures. Algorithm Analysis • Criteria • Performance metrics • Worst case • Best case? • Average case • Average cost? • Advanced topics • Lower bound, optimality, … Algorithm Analysis • How to measure • Not too general • Giving essential indication in comparison of algorithms • Not too precise • Machine independent • Language independent • Programming paradigm independent • Implementation independent Algorithm Analysis • Criteria • Critical operation • How many critical operation are conducted • For example Algorithmic problem Critical operation Sorting, selection, searching String matching Comparison (of keys) Graph traversal Processing a node/edge Matrix multiplication Multiplication Algorithm Analysis • Amount of work done • usually depends on size of the input • usually does not depend on size of the input only Algorithm Analysis n size of input f(n) amount of work done Worst-case Complexity • W(n) • Upper bound of cost • For any possible input • W(n)=max I2D n f(I) <latexit sha1_base64=\"jy8GwIKXuDbFafYptyVEMOjm6Is=\">AAACAXicbVDLSgMxFM3UV62vUTeCm2AR2k2ZEUE3QlEXdlfBPqBThkyaaUOTzJBkxDLUjb/ixoUibv0Ld/6NaTsLbT1w4XDOvdx7TxAzqrTjfFu5peWV1bX8emFjc2t7x97da6ookZg0cMQi2Q6QIowK0tBUM9KOJUE8YKQVDK8mfuueSEUjcadHMely1Bc0pBhpI/n2QaskyhceRw9+WvOogNe+GIelWtm3i07FmQIuEjcjRZCh7ttfXi/CCSdCY4aU6rhOrLspkppiRsYFL1EkRniI+qRjqECcqG46/WAMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eF5N6UiTjQReLYoTBjUEZzEAXtUEqzZyBCEJTW3QjxAEmFtQiuYENz5lxdJ86TiOhX39rRYvcziyINDcARKwAVnoApuQB00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9ugpWU</latexit><latexit sha1_base64=\"jy8GwIKXuDbFafYptyVEMOjm6Is=\">AAACAXicbVDLSgMxFM3UV62vUTeCm2AR2k2ZEUE3QlEXdlfBPqBThkyaaUOTzJBkxDLUjb/ixoUibv0Ld/6NaTsLbT1w4XDOvdx7TxAzqrTjfFu5peWV1bX8emFjc2t7x97da6ookZg0cMQi2Q6QIowK0tBUM9KOJUE8YKQVDK8mfuueSEUjcadHMely1Bc0pBhpI/n2QaskyhceRw9+WvOogNe+GIelWtm3i07FmQIuEjcjRZCh7ttfXi/CCSdCY4aU6rhOrLspkppiRsYFL1EkRniI+qRjqECcqG46/WAMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eF5N6UiTjQReLYoTBjUEZzEAXtUEqzZyBCEJTW3QjxAEmFtQiuYENz5lxdJ86TiOhX39rRYvcziyINDcARKwAVnoApuQB00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9ugpWU</latexit><latexit sha1_base64=\"jy8GwIKXuDbFafYptyVEMOjm6Is=\">AAACAXicbVDLSgMxFM3UV62vUTeCm2AR2k2ZEUE3QlEXdlfBPqBThkyaaUOTzJBkxDLUjb/ixoUibv0Ld/6NaTsLbT1w4XDOvdx7TxAzqrTjfFu5peWV1bX8emFjc2t7x97da6ookZg0cMQi2Q6QIowK0tBUM9KOJUE8YKQVDK8mfuueSEUjcadHMely1Bc0pBhpI/n2QaskyhceRw9+WvOogNe+GIelWtm3i07FmQIuEjcjRZCh7ttfXi/CCSdCY4aU6rhOrLspkppiRsYFL1EkRniI+qRjqECcqG46/WAMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eF5N6UiTjQReLYoTBjUEZzEAXtUEqzZyBCEJTW3QjxAEmFtQiuYENz5lxdJ86TiOhX39rRYvcziyINDcARKwAVnoApuQB00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9ugpWU</latexit><latexit sha1_base64=\"jy8GwIKXuDbFafYptyVEMOjm6Is=\">AAACAXicbVDLSgMxFM3UV62vUTeCm2AR2k2ZEUE3QlEXdlfBPqBThkyaaUOTzJBkxDLUjb/ixoUibv0Ld/6NaTsLbT1w4XDOvdx7TxAzqrTjfFu5peWV1bX8emFjc2t7x97da6ookZg0cMQi2Q6QIowK0tBUM9KOJUE8YKQVDK8mfuueSEUjcadHMely1Bc0pBhpI/n2QaskyhceRw9+WvOogNe+GIelWtm3i07FmQIuEjcjRZCh7ttfXi/CCSdCY4aU6rhOrLspkppiRsYFL1EkRniI+qRjqECcqG46/WAMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eF5N6UiTjQReLYoTBjUEZzEAXtUEqzZyBCEJTW3QjxAEmFtQiuYENz5lxdJ86TiOhX39rRYvcziyINDcARKwAVnoApuQB00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9ugpWU</latexit> Average-case Complexity • A(n) • Weighted average • A special case • Average cost • Total cost of all inputs, averaged over the input size • A(n)=X I2D(n) Pr(I)f(I) <latexit sha1_base64=\"na9pdEAgB+7Xrf6XDQ33W1WVIJ4=\">AAACB3icbVDLSgMxFM3UV62vUZeCBIvQbsqMCLoR6mNhdxXsAzpDyaSZNjTJDElGKEN3bvwVNy4UcesvuPNvTNtZaOuBCyfn3MvNPUHMqNKO823llpZXVtfy64WNza3tHXt3r6miRGLSwBGLZDtAijAqSENTzUg7lgTxgJFWMLye+K0HIhWNxL0excTnqC9oSDHSRurah5clUb7wVMK7ac2jAt6Y97guS7VyaKprF52KMwVcJG5GiiBDvWt/eb0IJ5wIjRlSquM6sfZTJDXFjIwLXqJIjPAQ9UnHUIE4UX46vWMMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eG5n1IRJ5oIPFsUJgzqCE5CgT0qCdZsZAjCkpq/QjxAEmFtoiuYENz5kxdJ86TiOhX37rRYvcriyIMDcARKwAVnoApuQR00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9tapcX</latexit><latexit sha1_base64=\"na9pdEAgB+7Xrf6XDQ33W1WVIJ4=\">AAACB3icbVDLSgMxFM3UV62vUZeCBIvQbsqMCLoR6mNhdxXsAzpDyaSZNjTJDElGKEN3bvwVNy4UcesvuPNvTNtZaOuBCyfn3MvNPUHMqNKO823llpZXVtfy64WNza3tHXt3r6miRGLSwBGLZDtAijAqSENTzUg7lgTxgJFWMLye+K0HIhWNxL0excTnqC9oSDHSRurah5clUb7wVMK7ac2jAt6Y97guS7VyaKprF52KMwVcJG5GiiBDvWt/eb0IJ5wIjRlSquM6sfZTJDXFjIwLXqJIjPAQ9UnHUIE4UX46vWMMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eG5n1IRJ5oIPFsUJgzqCE5CgT0qCdZsZAjCkpq/QjxAEmFtoiuYENz5kxdJ86TiOhX37rRYvcriyIMDcARKwAVnoApuQR00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9tapcX</latexit><latexit sha1_base64=\"na9pdEAgB+7Xrf6XDQ33W1WVIJ4=\">AAACB3icbVDLSgMxFM3UV62vUZeCBIvQbsqMCLoR6mNhdxXsAzpDyaSZNjTJDElGKEN3bvwVNy4UcesvuPNvTNtZaOuBCyfn3MvNPUHMqNKO823llpZXVtfy64WNza3tHXt3r6miRGLSwBGLZDtAijAqSENTzUg7lgTxgJFWMLye+K0HIhWNxL0excTnqC9oSDHSRurah5clUb7wVMK7ac2jAt6Y97guS7VyaKprF52KMwVcJG5GiiBDvWt/eb0IJ5wIjRlSquM6sfZTJDXFjIwLXqJIjPAQ9UnHUIE4UX46vWMMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eG5n1IRJ5oIPFsUJgzqCE5CgT0qCdZsZAjCkpq/QjxAEmFtoiuYENz5kxdJ86TiOhX37rRYvcriyIMDcARKwAVnoApuQR00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9tapcX</latexit><latexit sha1_base64=\"na9pdEAgB+7Xrf6XDQ33W1WVIJ4=\">AAACB3icbVDLSgMxFM3UV62vUZeCBIvQbsqMCLoR6mNhdxXsAzpDyaSZNjTJDElGKEN3bvwVNy4UcesvuPNvTNtZaOuBCyfn3MvNPUHMqNKO823llpZXVtfy64WNza3tHXt3r6miRGLSwBGLZDtAijAqSENTzUg7lgTxgJFWMLye+K0HIhWNxL0excTnqC9oSDHSRurah5clUb7wVMK7ac2jAt6Y97guS7VyaKprF52KMwVcJG5GiiBDvWt/eb0IJ5wIjRlSquM6sfZTJDXFjIwLXqJIjPAQ9UnHUIE4UX46vWMMj43Sg2EkTQkNp+rviRRxpUY8MJ0c6YGa9ybif14n0eG5n1IRJ5oIPFsUJgzqCE5CgT0qCdZsZAjCkpq/QjxAEmFtoiuYENz5kxdJ86TiOhX37rRYvcriyIMDcARKwAVnoApuQR00AAaP4Bm8gjfryXqx3q2PWWvOymb2wR9Ynz9tapcX</latexit> A(n)=1|D(n)|X I2D(n) f(I) <latexit sha1_base64=\"WOrw14U40+fRW8SRx73uV0n4RGg=\">AAACEnicbVDLSsNAFJ34rPUVdelmsAjtpiQi6Eaoj4XdVbAPaEKZTCft0MkkzEyEkuYb3Pgrblwo4taVO//GSZuFth64cOace5l7jxcxKpVlfRtLyyura+uFjeLm1vbOrrm335JhLDBp4pCFouMhSRjlpKmoYqQTCYICj5G2N7rO/PYDEZKG/F6NI+IGaMCpTzFSWuqZlcsyr1w4vkA4sdNkcqOfk9SRcdBL6g7lMBNSv1yv9MySVbWmgIvEzkkJ5Gj0zC+nH+I4IFxhhqTs2lak3AQJRTEjadGJJYkQHqEB6WrKUUCkm0xPSuGxVvrQD4UuruBU/T2RoEDKceDpzgCpoZz3MvE/rxsr/9xNKI9iRTiefeTHDKoQZvnAPhUEKzbWBGFB9a4QD5GOR+kUizoEe/7kRdI6qdpW1b47LdWu8jgK4BAcgTKwwRmogVvQAE2AwSN4Bq/gzXgyXox342PWumTkMwfgD4zPH796nD0=</latexit><latexit sha1_base64=\"WOrw14U40+fRW8SRx73uV0n4RGg=\">AAACEnicbVDLSsNAFJ34rPUVdelmsAjtpiQi6Eaoj4XdVbAPaEKZTCft0MkkzEyEkuYb3Pgrblwo4taVO//GSZuFth64cOace5l7jxcxKpVlfRtLyyura+uFjeLm1vbOrrm335JhLDBp4pCFouMhSRjlpKmoYqQTCYICj5G2N7rO/PYDEZKG/F6NI+IGaMCpTzFSWuqZlcsyr1w4vkA4sdNkcqOfk9SRcdBL6g7lMBNSv1yv9MySVbWmgIvEzkkJ5Gj0zC+nH+I4IFxhhqTs2lak3AQJRTEjadGJJYkQHqEB6WrKUUCkm0xPSuGxVvrQD4UuruBU/T2RoEDKceDpzgCpoZz3MvE/rxsr/9xNKI9iRTiefeTHDKoQZvnAPhUEKzbWBGFB9a4QD5GOR+kUizoEe/7kRdI6qdpW1b47LdWu8jgK4BAcgTKwwRmogVvQAE2AwSN4Bq/gzXgyXox342PWumTkMwfgD4zPH796nD0=</latexit><latexit sha1_base64=\"WOrw14U40+fRW8SRx73uV0n4RGg=\">AAACEnicbVDLSsNAFJ34rPUVdelmsAjtpiQi6Eaoj4XdVbAPaEKZTCft0MkkzEyEkuYb3Pgrblwo4taVO//GSZuFth64cOace5l7jxcxKpVlfRtLyyura+uFjeLm1vbOrrm335JhLDBp4pCFouMhSRjlpKmoYqQTCYICj5G2N7rO/PYDEZKG/F6NI+IGaMCpTzFSWuqZlcsyr1w4vkA4sdNkcqOfk9SRcdBL6g7lMBNSv1yv9MySVbWmgIvEzkkJ5Gj0zC+nH+I4IFxhhqTs2lak3AQJRTEjadGJJYkQHqEB6WrKUUCkm0xPSuGxVvrQD4UuruBU/T2RoEDKceDpzgCpoZz3MvE/rxsr/9xNKI9iRTiefeTHDKoQZvnAPhUEKzbWBGFB9a4QD5GOR+kUizoEe/7kRdI6qdpW1b47LdWu8jgK4BAcgTKwwRmogVvQAE2AwSN4Bq/gzXgyXox342PWumTkMwfgD4zPH796nD0=</latexit><latexit sha1_base64=\"WOrw14U40+fRW8SRx73uV0n4RGg=\">AAACEnicbVDLSsNAFJ34rPUVdelmsAjtpiQi6Eaoj4XdVbAPaEKZTCft0MkkzEyEkuYb3Pgrblwo4taVO//GSZuFth64cOace5l7jxcxKpVlfRtLyyura+uFjeLm1vbOrrm335JhLDBp4pCFouMhSRjlpKmoYqQTCYICj5G2N7rO/PYDEZKG/F6NI+IGaMCpTzFSWuqZlcsyr1w4vkA4sdNkcqOfk9SRcdBL6g7lMBNSv1yv9MySVbWmgIvEzkkJ5Gj0zC+nH+I4IFxhhqTs2lak3AQJRTEjadGJJYkQHqEB6WrKUUCkm0xPSuGxVvrQD4UuruBU/T2RoEDKceDpzgCpoZz3MvE/rxsr/9xNKI9iRTiefeTHDKoQZvnAPhUEKzbWBGFB9a4QD5GOR+kUizoEe/7kRdI6qdpW1b47LdWu8jgK4BAcgTKwwRmogVvQAE2AwSN4Bq/gzXgyXox342PWumTkMwfgD4zPH796nD0=</latexit> Average-case Cost of SeqSearch • Case 1: K is in E[ ] • Assumptions: • Assuming that K is in E[ ] • Assuming no same entries in E[ ] • Each possible input appears with equality (thus, K in the i th location with probability 1/n) A succ (n)= n\u00001 X i=0 Pr(I i |succ)t(I i )= n\u00001 X I=0 1n(i+1)=n+12 <latexit sha1_base64=\"2BikWXUFn263YNhPWwc5KJEsf3E=\">AAACRnicbZBLSwMxFIXv1Fetr6pLN4NFqIhlIoJuBB8bu6tgVWjHIZNmNJjJDElGKHF+nRvX7vwJblwo4tZMreLrQuBwzrkk+cKUM6U978EpjYyOjU+UJytT0zOzc9X5hROVZJLQNkl4Is9CrChngrY105yepZLiOOT0NLw6KPLTayoVS8Sx7qfUj/GFYBEjWFsrqPp7gVEZIXldrO50VRYHhu14+bkR6yhvyXozYDdFvqoL+VlpflW6kcTEoNyIvM7WkC0MDLFmrY08qNa8hjcY969AQ1GD4bSC6n23l5AspkITjpXqIC/VvsFSM8JpXulmiqaYXOEL2rFS4Jgq3www5O6KdXpulEh7hHYH7vcNg2Ol+nFomzHWl+p3Vpj/ZZ1MR9u+YSLNNBXk46Io465O3IKp22OSEs37VmAimX2rSy6x5aAt+YqFgH5/+a842Wggr4GONmu7+0McZViCZagDgi3YhUNoQRsI3MIjPMOLc+c8Oa/O20e15Ax3FuHHlOAdgyGwjw==</latexit><latexit sha1_base64=\"2BikWXUFn263YNhPWwc5KJEsf3E=\">AAACRnicbZBLSwMxFIXv1Fetr6pLN4NFqIhlIoJuBB8bu6tgVWjHIZNmNJjJDElGKHF+nRvX7vwJblwo4tZMreLrQuBwzrkk+cKUM6U978EpjYyOjU+UJytT0zOzc9X5hROVZJLQNkl4Is9CrChngrY105yepZLiOOT0NLw6KPLTayoVS8Sx7qfUj/GFYBEjWFsrqPp7gVEZIXldrO50VRYHhu14+bkR6yhvyXozYDdFvqoL+VlpflW6kcTEoNyIvM7WkC0MDLFmrY08qNa8hjcY969AQ1GD4bSC6n23l5AspkITjpXqIC/VvsFSM8JpXulmiqaYXOEL2rFS4Jgq3www5O6KdXpulEh7hHYH7vcNg2Ol+nFomzHWl+p3Vpj/ZZ1MR9u+YSLNNBXk46Io465O3IKp22OSEs37VmAimX2rSy6x5aAt+YqFgH5/+a842Wggr4GONmu7+0McZViCZagDgi3YhUNoQRsI3MIjPMOLc+c8Oa/O20e15Ax3FuHHlOAdgyGwjw==</latexit><latexit sha1_base64=\"2BikWXUFn263YNhPWwc5KJEsf3E=\">AAACRnicbZBLSwMxFIXv1Fetr6pLN4NFqIhlIoJuBB8bu6tgVWjHIZNmNJjJDElGKHF+nRvX7vwJblwo4tZMreLrQuBwzrkk+cKUM6U978EpjYyOjU+UJytT0zOzc9X5hROVZJLQNkl4Is9CrChngrY105yepZLiOOT0NLw6KPLTayoVS8Sx7qfUj/GFYBEjWFsrqPp7gVEZIXldrO50VRYHhu14+bkR6yhvyXozYDdFvqoL+VlpflW6kcTEoNyIvM7WkC0MDLFmrY08qNa8hjcY969AQ1GD4bSC6n23l5AspkITjpXqIC/VvsFSM8JpXulmiqaYXOEL2rFS4Jgq3www5O6KdXpulEh7hHYH7vcNg2Ol+nFomzHWl+p3Vpj/ZZ1MR9u+YSLNNBXk46Io465O3IKp22OSEs37VmAimX2rSy6x5aAt+YqFgH5/+a842Wggr4GONmu7+0McZViCZagDgi3YhUNoQRsI3MIjPMOLc+c8Oa/O20e15Ax3FuHHlOAdgyGwjw==</latexit><latexit sha1_base64=\"2BikWXUFn263YNhPWwc5KJEsf3E=\">AAACRnicbZBLSwMxFIXv1Fetr6pLN4NFqIhlIoJuBB8bu6tgVWjHIZNmNJjJDElGKHF+nRvX7vwJblwo4tZMreLrQuBwzrkk+cKUM6U978EpjYyOjU+UJytT0zOzc9X5hROVZJLQNkl4Is9CrChngrY105yepZLiOOT0NLw6KPLTayoVS8Sx7qfUj/GFYBEjWFsrqPp7gVEZIXldrO50VRYHhu14+bkR6yhvyXozYDdFvqoL+VlpflW6kcTEoNyIvM7WkC0MDLFmrY08qNa8hjcY969AQ1GD4bSC6n23l5AspkITjpXqIC/VvsFSM8JpXulmiqaYXOEL2rFS4Jgq3www5O6KdXpulEh7hHYH7vcNg2Ol+nFomzHWl+p3Vpj/ZZ1MR9u+YSLNNBXk46Io465O3IKp22OSEs37VmAimX2rSy6x5aAt+YqFgH5/+a842Wggr4GONmu7+0McZViCZagDgi3YhUNoQRsI3MIjPMOLc+c8Oa/O20e15Ax3FuHHlOAdgyGwjw==</latexit> Average-case Cost of SeqSearch • Case 2: K may (or may not) be in E[ ] • Assume that K is in E[ ] with probability q A(n)=Pr(succ)A succ (n)+Pr(fail)A fail (n) <latexit sha1_base64=\"rLf3IodPqfd2wJ6lY6M2kR1pDuw=\">AAACFXicbZBNS8NAEIYn9avWr6hHL8EitCglEUEvQqsXjxXsB7QhbLabdulmE3Y3Qgn9E178K148KOJV8Oa/cdPmoNWBZV6emWF2Xj9mVCrb/jIKS8srq2vF9dLG5tb2jrm715ZRIjBp4YhFousjSRjlpKWoYqQbC4JCn5GOP77O6p17IiSN+J2axMQN0ZDTgGKkNPLMk0aFVy+boiITjKsNL83yVLNjzQJEWcaynDHPLNs1exbWX+Hkogx5ND3zsz+IcBISrjBDUvYcO1ZuioSimJFpqZ9IEiM8RkPS05KjkEg3nV01tY40GVhBJPTjyprRnxMpCqWchL7uDJEaycVaBv+r9RIVXLgp5XGiCMfzRUHCLBVZmUXWgAqCFZtogbCg+q8WHiGBsNJGlrQJzuLJf0X7tObYNef2rFy/yu0owgEcQgUcOIc63EATWoDhAZ7gBV6NR+PZeDPe560FI5/Zh19hfHwDkM6dMw==</latexit><latexit sha1_base64=\"rLf3IodPqfd2wJ6lY6M2kR1pDuw=\">AAACFXicbZBNS8NAEIYn9avWr6hHL8EitCglEUEvQqsXjxXsB7QhbLabdulmE3Y3Qgn9E178K148KOJV8Oa/cdPmoNWBZV6emWF2Xj9mVCrb/jIKS8srq2vF9dLG5tb2jrm715ZRIjBp4YhFousjSRjlpKWoYqQbC4JCn5GOP77O6p17IiSN+J2axMQN0ZDTgGKkNPLMk0aFVy+boiITjKsNL83yVLNjzQJEWcaynDHPLNs1exbWX+Hkogx5ND3zsz+IcBISrjBDUvYcO1ZuioSimJFpqZ9IEiM8RkPS05KjkEg3nV01tY40GVhBJPTjyprRnxMpCqWchL7uDJEaycVaBv+r9RIVXLgp5XGiCMfzRUHCLBVZmUXWgAqCFZtogbCg+q8WHiGBsNJGlrQJzuLJf0X7tObYNef2rFy/yu0owgEcQgUcOIc63EATWoDhAZ7gBV6NR+PZeDPe560FI5/Zh19hfHwDkM6dMw==</latexit><latexit sha1_base64=\"rLf3IodPqfd2wJ6lY6M2kR1pDuw=\">AAACFXicbZBNS8NAEIYn9avWr6hHL8EitCglEUEvQqsXjxXsB7QhbLabdulmE3Y3Qgn9E178K148KOJV8Oa/cdPmoNWBZV6emWF2Xj9mVCrb/jIKS8srq2vF9dLG5tb2jrm715ZRIjBp4YhFousjSRjlpKWoYqQbC4JCn5GOP77O6p17IiSN+J2axMQN0ZDTgGKkNPLMk0aFVy+boiITjKsNL83yVLNjzQJEWcaynDHPLNs1exbWX+Hkogx5ND3zsz+IcBISrjBDUvYcO1ZuioSimJFpqZ9IEiM8RkPS05KjkEg3nV01tY40GVhBJPTjyprRnxMpCqWchL7uDJEaycVaBv+r9RIVXLgp5XGiCMfzRUHCLBVZmUXWgAqCFZtogbCg+q8WHiGBsNJGlrQJzuLJf0X7tObYNef2rFy/yu0owgEcQgUcOIc63EATWoDhAZ7gBV6NR+PZeDPe560FI5/Zh19hfHwDkM6dMw==</latexit><latexit sha1_base64=\"rLf3IodPqfd2wJ6lY6M2kR1pDuw=\">AAACFXicbZBNS8NAEIYn9avWr6hHL8EitCglEUEvQqsXjxXsB7QhbLabdulmE3Y3Qgn9E178K148KOJV8Oa/cdPmoNWBZV6emWF2Xj9mVCrb/jIKS8srq2vF9dLG5tb2jrm715ZRIjBp4YhFousjSRjlpKWoYqQbC4JCn5GOP77O6p17IiSN+J2axMQN0ZDTgGKkNPLMk0aFVy+boiITjKsNL83yVLNjzQJEWcaynDHPLNs1exbWX+Hkogx5ND3zsz+IcBISrjBDUvYcO1ZuioSimJFpqZ9IEiM8RkPS05KjkEg3nV01tY40GVhBJPTjyprRnxMpCqWchL7uDJEaycVaBv+r9RIVXLgp5XGiCMfzRUHCLBVZmUXWgAqCFZtogbCg+q8WHiGBsNJGlrQJzuLJf0X7tObYNef2rFy/yu0owgEcQgUcOIc63EATWoDhAZ7gBV6NR+PZeDPe560FI5/Zh19hfHwDkM6dMw==</latexit> =qn+12+(1\u0000q)n <latexit sha1_base64=\"OGujBPS4oAifi7H6t7bptGy/3vc=\">AAAB/3icbVDLSgNBEOyNrxhfUcGLl8UgRIJhJwh6EYJePEYwD0iWMDuZTYbMzm5mZoWw7sFf8eJBEa/+hjf/xsnjoNGChqKqm+4uL+JMacf5sjJLyyura9n13Mbm1vZOfnevocJYElonIQ9ly8OKciZoXTPNaSuSFAcep01veD3xm/dUKhaKOz2OqBvgvmA+I1gbqZs/uBx1fIlJIkooTSppqYhORyfGKDhlZwr7L0FzUoA5at38Z6cXkjigQhOOlWojJ9JugqVmhNM014kVjTAZ4j5tGypwQJWbTO9P7WOj9Gw/lKaEtqfqz4kEB0qNA890BlgP1KI3Ef/z2rH2L9yEiSjWVJDZIj/mtg7tSRh2j0lKNB8bgolk5labDLCJQ5vIciYEtPjyX9KolJFTRrdnherVPI4sHMIRFAHBOVThBmpQBwIP8AQv8Go9Ws/Wm/U+a81Y85l9+AXr4xsRz5TS</latexit><latexit sha1_base64=\"OGujBPS4oAifi7H6t7bptGy/3vc=\">AAAB/3icbVDLSgNBEOyNrxhfUcGLl8UgRIJhJwh6EYJePEYwD0iWMDuZTYbMzm5mZoWw7sFf8eJBEa/+hjf/xsnjoNGChqKqm+4uL+JMacf5sjJLyyura9n13Mbm1vZOfnevocJYElonIQ9ly8OKciZoXTPNaSuSFAcep01veD3xm/dUKhaKOz2OqBvgvmA+I1gbqZs/uBx1fIlJIkooTSppqYhORyfGKDhlZwr7L0FzUoA5at38Z6cXkjigQhOOlWojJ9JugqVmhNM014kVjTAZ4j5tGypwQJWbTO9P7WOj9Gw/lKaEtqfqz4kEB0qNA890BlgP1KI3Ef/z2rH2L9yEiSjWVJDZIj/mtg7tSRh2j0lKNB8bgolk5labDLCJQ5vIciYEtPjyX9KolJFTRrdnherVPI4sHMIRFAHBOVThBmpQBwIP8AQv8Go9Ws/Wm/U+a81Y85l9+AXr4xsRz5TS</latexit><latexit sha1_base64=\"OGujBPS4oAifi7H6t7bptGy/3vc=\">AAAB/3icbVDLSgNBEOyNrxhfUcGLl8UgRIJhJwh6EYJePEYwD0iWMDuZTYbMzm5mZoWw7sFf8eJBEa/+hjf/xsnjoNGChqKqm+4uL+JMacf5sjJLyyura9n13Mbm1vZOfnevocJYElonIQ9ly8OKciZoXTPNaSuSFAcep01veD3xm/dUKhaKOz2OqBvgvmA+I1gbqZs/uBx1fIlJIkooTSppqYhORyfGKDhlZwr7L0FzUoA5at38Z6cXkjigQhOOlWojJ9JugqVmhNM014kVjTAZ4j5tGypwQJWbTO9P7WOj9Gw/lKaEtqfqz4kEB0qNA890BlgP1KI3Ef/z2rH2L9yEiSjWVJDZIj/mtg7tSRh2j0lKNB8bgolk5labDLCJQ5vIciYEtPjyX9KolJFTRrdnherVPI4sHMIRFAHBOVThBmpQBwIP8AQv8Go9Ws/Wm/U+a81Y85l9+AXr4xsRz5TS</latexit><latexit sha1_base64=\"OGujBPS4oAifi7H6t7bptGy/3vc=\">AAAB/3icbVDLSgNBEOyNrxhfUcGLl8UgRIJhJwh6EYJePEYwD0iWMDuZTYbMzm5mZoWw7sFf8eJBEa/+hjf/xsnjoNGChqKqm+4uL+JMacf5sjJLyyura9n13Mbm1vZOfnevocJYElonIQ9ly8OKciZoXTPNaSuSFAcep01veD3xm/dUKhaKOz2OqBvgvmA+I1gbqZs/uBx1fIlJIkooTSppqYhORyfGKDhlZwr7L0FzUoA5at38Z6cXkjigQhOOlWojJ9JugqVmhNM014kVjTAZ4j5tGypwQJWbTO9P7WOj9Gw/lKaEtqfqz4kEB0qNA890BlgP1KI3Ef/z2rH2L9yEiSjWVJDZIj/mtg7tSRh2j0lKNB8bgolk5labDLCJQ5vIciYEtPjyX9KolJFTRrdnherVPI4sHMIRFAHBOVThBmpQBwIP8AQv8Go9Ws/Wm/U+a81Y85l9+AXr4xsRz5TS</latexit> How to make reasonable assumptions? Algorithm Analysis • Advanced topics • Lower bound (Selection) • Optimality (Greedy, DP) • Computation complexity • Approximate / online / randomized algorithms Thank you! Q & A","libVersion":"0.2.4","langs":""}